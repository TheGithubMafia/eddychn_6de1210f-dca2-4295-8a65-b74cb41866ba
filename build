#!/bin/bash
if [ "$CC" = "" ]; then
	CC="gcc"
fi

MAX_WORKERS=$(nproc)
DEBUG=0
OPT="-O2"
WARN=""
ROOT="."
CC="$CC -fdiagnostics-color=always"
LNK="$CC -rdynamic"
CFLAGS="-pipe -fPIC -DMINIZ_NO_STDIO -DMINIZ_NO_ARCHIVE_APIS -DMINIZ_NO_TIME"
LIBS="-lpthread -ldl -lcrypto"
OUTBIN="server"
COMMIT_SHA="-DGIT_COMMIT_SHA=\"$(git rev-parse --short HEAD)\""
PLUGIN_BUILD=0
PLUGIN_INSTALL=0
PLUGINS_DIR="$ROOT/out/plugins"

notaplugin () {
	echo "Looks like the specified directory is not a plugin."
	exit 1;
}

dowait () {
	wait $1
	if [ $? -ne 0 ]; then
		echo -ne "error\nCompiler errors:\n$(cat $STDERR)\n"
		exit 1
	fi
}

for a in "$@"
do
	if [ $PLUGIN_BUILD -eq 2 ]; then
		pushd "../cs-$a"
		git pull
		popd
		PLUGIN_BUILD=1
	fi
	if [ $PLUGIN_BUILD -eq 1 ]; then
		if [ ! -n "$PLUGIN_NAME" ]; then
			CFLAGS="$CFLAGS -DPLUGIN_BUILD -Isrc"
			LNK="$CC -shared"
			PLUGIN_NAME="$a"
			OUTBIN="$a.so"
			ROOT="../cs-$a"
			if [ ! -d $ROOT ]; then notaplugin; fi
			if [ ! -d $ROOT/src ]; then notaplugin; fi
		else
			if [ "$a" == "install" ]; then
				PLUGIN_INSTALL=1
			else
				LIBS="$LIBS -l$a"
			fi
		fi
		continue
	fi
	if [ "$a" == "pb" ]; then PLUGIN_BUILD=1; fi
	if [ "$a" == "pbu" ]; then PLUGIN_BUILD=2; fi
	if [ "$a" == "wall" ]; then WARN="-Wall -Wextra -pedantic-errors"; fi
	if [ "$a" == "nowarn" ]; then WARN="-W0"; fi
	if [ "$a" == "dbg" ]; then DEBUG=1; CFLAGS="$CFLAGS -g"; OPT="-O0"; fi
	if [ "$a" == "o0" ]; then OPT="-O0"; fi
	if [ "$a" == "o1" ]; then OPT="-O1"; fi
	if [ "$a" == "o2" ]; then OPT="-O2"; fi
	if [ "$a" == "o3" ]; then OPT="-O3"; fi
	if [ "$a" == "of" ]; then OPT="-Ofast"; fi
done

STDERR="$ROOT/out/stderr"
OBJDIR="$ROOT/objs"
OUTDIR="$ROOT/out"

if [ ! -d "$OUTDIR" ]; then mkdir $OUTDIR; fi
if [ ! -d "$OBJDIR" ]; then mkdir $OBJDIR; fi

echo -n "Compiling..."
OBJS="$OBJDIR/miniz.o"
echo -n "" > $STDERR
pids=()
cnt=0

#Compiling miniz
$CC -c ./miniz/miniz.c -o $OBJDIR/miniz.o -I"./miniz/" $WARN $OPT $CFLAGS 2>> $STDERR &
dowait $!

for C in `find "$ROOT/src/" -type f -name *.c ! -name hash.c`; do
	objpath="$OBJDIR/$(basename $C .c).o"
	OBJS="$OBJS $objpath"
	$CC -c $COMMIT_SHA $C -o $objpath -I"./miniz/" -I"$ROOT/src" $WARN $OPT $CFLAGS 2>> $STDERR &
	pids+=($!)
	((cnt++))
	if [ $cnt -ge $MAX_WORKERS ]; then
		dowait ${pids[-1]}
		unset pids[-1]
		((cnt--))
	fi
done

for pid in ${pids[@]}; do
	dowait $pid
done

echo -ne "done\nLinking..."
$LNK -o "$OUTDIR/$OUTBIN" $LIBS $OBJS 2>> $STDERR
if [ $? -ne 0 ]; then
	echo -ne "error\nLinker errors:\n$(cat $STDERR)\n"
	exit 1
fi

if [ $DEBUG -eq 0 ]; then
	echo -ne "done\nStripping..."
	strip "$OUTDIR/$OUTBIN"
fi

if [ $PLUGIN_INSTALL -eq 1 ]; then
	echo -ne "done\nCopying to plugins directory..."
	if [ ! -d "$PLUGINS_DIR" ]; then mkdir $PLUGINS_DIR; fi
	cp "$OUTDIR/$OUTBIN" "$PLUGINS_DIR/$OUTBIN"
	echo "done"
else
	echo "done"
fi

stderrlen=$(wc -c < "$STDERR")
if [ $stderrlen -gt 0 ]; then
	echo -e "Compiler warnings:\n$(cat $STDERR)"
fi
exit 0
